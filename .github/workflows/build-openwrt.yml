name: Build OpenWrt Package

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the source code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install required tools
      - name: Install Build Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev \
            gawk git gettext libssl-dev xsltproc wget unzip python3 python3-distutils zip

      # Step 3: Read the .config file using a valid action
      - name: Read Config File
        id: config
        uses: lannonbr/parse-yaml@v1
        with:
          yaml-file: .config
          key-separator: .

      # Step 4: Download and prepare OpenWrt SDK for each architecture
      - name: Download and Prepare OpenWrt SDK
        run: |
          architectures="${{ steps.config.outputs.architectures }}"
          mkdir sdk-builds
          for arch in ${architectures//,/ }; do
            wget https://downloads.openwrt.org/releases/22.03.5/targets/generic/$arch/openwrt-sdk-22.03.5-$arch-generic.Linux-x86_64.tar.xz -O sdk-$arch.tar.xz
            tar -xf sdk-$arch.tar.xz -C sdk-builds
          done

      # Step 5: Clone the package repository
      - name: Clone Package Repository
        run: |
          git clone ${{ steps.config.outputs.repository }} ./package-src

      # Step 6: Copy the package to SDKs
      - name: Copy Package to SDKs
        run: |
          for sdk in sdk-builds/*; do
            cp -r ./package-src $sdk/package/${{ steps.config.outputs.package_name }}
          done

      # Step 7: Build the package for all architectures
      - name: Build Package for All Architectures
        run: |
          for sdk in sdk-builds/*; do
            pushd $sdk
            make menuconfig # You can replace this step with automated config commands
            make package/${{ steps.config.outputs.package_name }}/compile V=s
            popd
          done

      # Step 8: Compress the built packages into a ZIP file
      - name: Zip Built Packages
        run: |
          mkdir output
          for sdk in sdk-builds/*; do
            cp -r $sdk/bin/packages output/
          done
          zip -r openwrt-packages.zip output/

      # Step 9: Upload the ZIP file as an artifact
      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt-Packages
          path: openwrt-packages.zip
