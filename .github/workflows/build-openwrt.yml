name: Build OpenWrt Package

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the source code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Install Build Tools
      - name: Install Required Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses5-dev \
            gawk git gettext libssl-dev xsltproc wget unzip python3 python3-distutils zip \
            yq

      # Step 3: Read Config File and Extract Values
      - name: Read Config File
        id: config
        run: |
          export REPOSITORY=$(yq '.repository' .config)
          export PACKAGE_NAME=$(yq '.package_name' .config)
          export ARCHITECTURES=$(yq '.architectures | join(",")')
          echo "repository=$REPOSITORY" >> $GITHUB_ENV
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "architectures=$ARCHITECTURES" >> $GITHUB_ENV

      # Step 4: Download and Prepare OpenWrt SDK for each architecture
      - name: Download and Prepare OpenWrt SDK
        run: |
          mkdir sdk-builds
          for arch in ${ARCHITECTURES//,/ }; do
            wget https://downloads.openwrt.org/releases/22.03.5/targets/generic/$arch/openwrt-sdk-22.03.5-$arch-generic.Linux-x86_64.tar.xz -O sdk-$arch.tar.xz
            tar -xf sdk-$arch.tar.xz -C sdk-builds
          done

      # Step 5: Clone the Package Repository
      - name: Clone Package Repository
        run: |
          git clone $REPOSITORY ./package-src

      # Step 6: Copy the Package to SDKs
      - name: Copy Package to SDKs
        run: |
          for sdk in sdk-builds/*; do
            cp -r ./package-src $sdk/package/$PACKAGE_NAME
          done

      # Step 7: Build the Package for all architectures
      - name: Build Package for All Architectures
        run: |
          for sdk in sdk-builds/*; do
            pushd $sdk
            make menuconfig # Customize this step as needed
            make package/$PACKAGE_NAME/compile V=s
            popd
          done

      # Step 8: Compress Built Packages
      - name: Compress Built Packages
        run: |
          mkdir output
          for sdk in sdk-builds/*; do
            cp -r $sdk/bin/packages output/
          done
          zip -r openwrt-packages.zip output/

      # Step 9: Upload Package Artifacts
      - name: Upload Package Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt-Packages
          path: openwrt-packages.zip
